name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: kib_user
          POSTGRES_PASSWORD: kib_password
          POSTGRES_DB: kib_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
    
    - name: Run tests with coverage
      run: npm run test:cov
      env:
        DATABASE_HOST: localhost
        DATABASE_PORT: 5432
        DATABASE_USER: kib_user
        DATABASE_PASSWORD: kib_password
        DATABASE_NAME: kib_test
        REDIS_HOST: localhost
        REDIS_PORT: 6379
        JWT_SECRET: test_secret
        TMDB_API_KEY: test_api_key
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        fail_ci_if_error: true
    
    - name: Build application
      run: npm run build
  
  docker:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build Docker image
      run: docker build -t kib-api:latest .
    
    - name: Test Docker image
      run: |
        docker run -d --name test-container -p 8080:8080 \
          -e DATABASE_HOST=host.docker.internal \
          -e REDIS_HOST=host.docker.internal \
          -e JWT_SECRET=test_secret \
          -e TMDB_API_KEY=test_key \
          kib-api:latest
        sleep 10
        curl -f http://localhost:8080/ || exit 1
        docker stop test-container
    
    # Uncomment to push to Docker Hub
    # - name: Login to Docker Hub
    #   uses: docker/login-action@v2
    #   with:
    #     username: ${{ secrets.DOCKER_USERNAME }}
    #     password: ${{ secrets.DOCKER_TOKEN }}
    
    # - name: Push to Docker Hub
    #   run: |
    #     docker tag kib-api:latest ${{ secrets.DOCKER_USERNAME }}/kib-api:latest
    #     docker push ${{ secrets.DOCKER_USERNAME }}/kib-api:latest